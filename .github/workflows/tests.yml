name: tests

on:
  push:
    branches:
      - "**"
    tags:
      - "!**"
  workflow_call:

env:
  POETRY_VERSION: 1.6

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        PYTHON_VERSION: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "true"

      - name: Set up Python ${{ matrix.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.PYTHON_VERSION }}

      - name: Get full Python version
        id: full-python-version
        shell: bash
        run: echo "version=$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")" >> $GITHUB_OUTPUT

      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry==${{env.POETRY_VERSION}}

      - name: Configure poetry
        shell: bash
        run: poetry config virtualenvs.in-project true

      - name: Set up cache
        uses: actions/cache@v4
        id: cache
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Ensure cache is healthy
        if: steps.cache.outputs.cache-hit == 'true'
        shell: bash
        run: poetry run pip --version >/dev/null 2>&1 || rm -rf .venv

      - name: Test the lock file is up to date
        run: python -m poetry check --lock

      - name: Install dependencies and package
        shell: bash
        run: |
          poetry install --only dev
          poetry build
          poetry install --extras docs
  
      - name: Run pytest
        shell: bash
        run: |
          poetry run python -m pytest --cov=pybedlite --cov-report=xml --cov-branch 
  
      - name: Style checking
        shell: bash
        run: |
          poetry run black --line-length 99 --check pybedlite
  
      - name: Import sorting
        shell: bash
        run: |
          poetry run isort --force-single-line-imports --profile black --check pybedlite
  
      - name: Run lint
        shell: bash
        run: |
          poetry run flake8 --config=ci/flake8.cfg pybedlite
  
      - name: Run mypy
        shell: bash
        run: |
          poetry run mypy -p pybedlite --config=ci/mypy.ini
  
      - name: Run docs
        shell: bash
        run: |
          set -euo pipefail
          pushd docs
          poetry run make html
          popd
  
      - name: Upload code coverage
        uses: codecov/codecov-action@v4.5.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
